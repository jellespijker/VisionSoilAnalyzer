cmake_minimum_required(VERSION 2.7)
project(Hardware)
set (Hardware_VERSION_MAJOR 1)
set (Hardware_VERSION_MINOR 0)
SET(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)

if(CMAKE_BUILD_TYPE STREQUAL "Debug") 
	set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/Debug)
	set(LIB_INSTALL_DIR ${CMAKE_SOURCE_DIR}/Debug)
	set(EXECUTABLE_OUTPUT_PATH ${CMAKE_SOURCE_DIR}/Debug)
else()
	set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/Release)
	set(LIB_INSTALL_DIR ${CMAKE_SOURCE_DIR}/Release)
	set(EXECUTABLE_OUTPUT_PATH ${CMAKE_SOURCE_DIR}/Release)
endif() 

set(LIBRARIES_FROM_REFERENCES "")
add_library(Hardware SHARED ADC.cpp BBB.cpp EC12P.cpp eqep.cpp GPIO.cpp Microscope.cpp PWM.cpp SoilCape.cpp USB.cpp)
target_link_libraries(Hardware -L/usr/local/lib -L/usr/lib/x86_64-linux-gnu/ -lopencv_calib3d -lopencv_core -lopencv_features2d -lopencv_flann -lopencv_highgui -lopencv_imgcodecs -lopencv_imgproc -lopencv_ml -lopencv_objdetect -lopencv_photo -lopencv_shape -lopencv_stitching -lopencv_superres -lopencv_ts -lopencv_video -lopencv_videoio -lopencv_videostab -lboost_filesystem "${LIBRARIES_FROM_REFERENCES}")
include_directories(/usr/local/include /usr/local/include/opencv /usr/include/boost)
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -std=c++11 -pthread")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -pthread")

