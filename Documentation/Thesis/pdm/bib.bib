
@online{backlog_branching_2015,
	title = {Branching workflow using topic and integration branch [branch] {\textbar} Git Beginner's Guide for Dummies {\textbar} Backlog},
	url = {http://backlogtool.com/git-guide/en/stepup/stepup1_5.html},
	abstract = {Branching workflow using topic and integration branch [branch] {\textbar} Welcome to Git Beginner's Guide for Dummies. Let's study to master version management using Git.},
	author = {{Backlog}},
	urldate = {2015-11-21},
	date = {2015},
	keywords = {{VSA}},
	file = {Snapshot:/home/peer23peer/.zotero/zotero/w3pd0kkm.default/zotero/storage/QSAF7283/stepup1_5.html:text/html}
}

@inreference{_git_2015,
	title = {Git (software)},
	rights = {Creative Commons Attribution-{ShareAlike} License},
	url = {https://en.wikipedia.org/w/index.php?title=Git_(software)&oldid=691077698},
	abstract = {Git (/ɡɪt/) is a widely used version control system for software development. It is a distributed revision control system with an emphasis on speed, data integrity, and support for distributed, non-linear workflows. Git was initially designed and developed by Linus Torvalds for Linux kernel development in 2005.
As with most other distributed version control systems, and unlike most client–server systems, every Git working directory is a full-fledged repository with complete history and full version-tracking capabilities, independent of network access or a central server. Like the Linux kernel, Git is free software distributed under the terms of the {GNU} General Public License version 2.},
	booktitle = {Wikipedia, the free encyclopedia},
	urldate = {2015-11-21},
	date = {2015-11-17},
	langid = {english},
	note = {Page Version {ID}: 691077698},
	keywords = {{VSA}},
	file = {Snapshot:/home/peer23peer/.zotero/zotero/w3pd0kkm.default/zotero/storage/7GCERXZP/index.html:text/html}
}

@book{achilleas_pipinellis_github_2015,
	title = {Github Essential},
	publisher = {{PACKT} Publishing},
	author = {{Achilleas Pipinellis}},
	date = {2015},
	keywords = {{VSA}},
	file = {GitHub Essentials.pdf:/home/peer23peer/stack/Books/Development/GitHub/GitHub Essentials.pdf:application/pdf}
}

@book{peter_bell_introducing_2015,
	title = {Introducing {GitHub}: a non-technical guide},
	publisher = {O'Reilly},
	author = {{Peter Bell} and {Brent Beer}},
	date = {2015},
	keywords = {{VSA}},
	file = {Introducing GitHub.pdf:/home/peer23peer/stack/Books/Development/GitHub/Introducing GitHub.pdf:application/pdf}
}

@misc{spijker_product_2014,
	title = {Product documentatie: Test opstelling - Soil Analyzer},
	publisher = {Hogeschool van Arnhem en Nijmegen},
	author = {Spijker, Jelle},
	date = {2014-11-02},
	keywords = {{VSA}}
}

@misc{jelle_spijker_vision_2015,
	title = {Vision Soil Analyzer: Product design of a vision based soil analyzer},
	abstract = {This project finds its roots in the minor Embedded Vision Design ({EVD}) taught at the university of applied sciences {HAN}. During this minor a portable embedded device was developed which analyses soil samples using a microscope. This Vision Soil Analyzer hereafter referred to as {VSA}, analyses soil samples using the optical properties.

This product documentation describes the design and realization of a vision based soil analyzer. It does so by describing it functional design, which lies at the heart of the product and explains its main function:
{\textbackslash}begin\{{sBox}\}
	To analyses a dried soil sample, consisting of particle in the range of \$ 0.02 [mm] {\textbackslash}leq P {\textbackslash}leq 2.0 [mm] \$ and present a user with information regarding color, texture and structure.
{\textbackslash}end\{{sBox}\}
From here the requirements with regard to function and production are extrapolated. The functional requirements quantize the needed performance on color, texture and structure and give condition how to test this performance. While the technical requirements tells how the product is made. Giving constrains on dimension, programing language and electrical devices used.

An important aspect of a vision based soil analyzer is its interaction with a user. This is illustrated by a user interface and manuals describing its interaction protocols from an end-user and administrator perspective.

The technical design dissects the structure into subsystems, such as microcontroller, light environment and sample plate. These and more are necessary to perform its main function. These subsystems have a high level of interaction with each other which are set out in the architecture of the device.

The vision based soil analyzer rest heavenly on vision algorithms, these follow certain established lines, which are set out in the acquisition, enhancement, segmentation, feature extraction and classification steps.

All of the above serve as the basis for realization of a vision based soil analyzer. In order to design and build a prototype the working environment is described. This is a dual booted Windows / Linux laptop, running {QT} designer, Matlab and Siemens {NX}. The project itself is hosted on Github and Upverter.

The technical aspects are described for the disciplines: software, mechanical and electronic engineering. Because the main focus lies on the vision aspects of the device, the previous determine route is set out in detail, describing the acquisition steps and various strategies which can be pursued. The enhancement from intensity to segmentation steps are described, such as blurring and adaptive contrast stretch. The follow up algorithms, transform an intensity picture to individual blobs. This is done by finding an optimal threshold between pixel values which belong to a particle or those that are the background.

Further transformation are performed to ensure each particle is identified. The shape of these are classified by describing the contour in the frequency domain, and feeding the complex numbers, obtained with a Fast Fourier Transform, in to a neural network. The resulting classification is one of angularity. Roundness is categorized with the Hu moments. The size of the particle is determined and used to describe the soil sample as a particle size distribution. All obtained information is presented to the user, through a multitude of means using the graphical user interface and a report generator.

Finally the design is verified against the previous determined requirements and a conclusion is drawn. Throwing a fare-sight into the project to come.},
	publisher = {University of applied sciences {HAN}},
	author = {{Jelle Spijker}},
	date = {2015-10-10},
	keywords = {{VSA}}
}

@online{oleg_github_2013,
	title = {{GitHub} {PDM}: Is It For Real?},
	url = {http://beyondplm.com/2013/09/19/github-pdm-is-it-for-real/},
	shorttitle = {{GitHub} {PDM}},
	abstract = {{GitHub} is a well known social network for programmers. According to Wikipedia article, {GitHub} is a web-based hosting service for software development projects that use the Git revision control syst...},
	titleaddon = {Beyond {PLM} (Product Lifecycle Management) Blog},
	author = {{OLEG}},
	urldate = {2015-11-18},
	date = {2013-09-19},
	keywords = {{VSA}},
	file = {Snapshot:/home/peer23peer/.zotero/zotero/w3pd0kkm.default/zotero/storage/CGVZ826Z/github-pdm-is-it-for-real.html:text/html}
}

@online{olegshilovitsky_github_2013,
	title = {{GitHub} {\textbar} Daily {PLM} Think Tank Blog},
	url = {http://plmtwine.com/tag/github/},
	abstract = {Posts about {GitHub} written by olegshilovitsky},
	author = {{olegshilovitsky}},
	urldate = {2015-11-18},
	date = {2013-12-21},
	keywords = {{VSA}},
	file = {Snapshot:/home/peer23peer/.zotero/zotero/w3pd0kkm.default/zotero/storage/QW9HDDUC/github.html:text/html}
}

@online{biggs_github_2013,
	title = {{GitHub} Adds 3D Modeling Features That Make It A Printer-Agnostic Choice For Object Sharing},
	url = {http://social.techcrunch.com/2013/09/18/github-adds-3d-modeling-features-that-make-it-a-printer-agnostic-choice-for-object-sharing/},
	abstract = {Github, everyone's favorite nerdery, added {STL} object file support - basically a system for uploading and rendering 3D models - in April. Now, however,..},
	titleaddon = {{TechCrunch}},
	author = {Biggs, John},
	urldate = {2015-11-18},
	date = {2013-09-18},
	keywords = {{VSA}},
	file = {Snapshot:/home/peer23peer/.zotero/zotero/w3pd0kkm.default/zotero/storage/73T5CG76/github-adds-3d-modeling-features-that-make-it-a-printer-agnostic-choice-for-object-sharing.html:text/html}
}

@online{skalnik_3d_2013,
	title = {3D File Diffs},
	url = {https://github.com/blog/1633-3d-file-diffs},
	abstract = {Back in April, we introduced the 3D file viewer. Today we're
improving this by displaying diffs of {STL} files on
{GitHub}.



There are two modes to figure out what you're looking at. By default, we s...},
	titleaddon = {{GitHub}},
	type = {Blog},
	author = {{skalnik}},
	urldate = {2015-11-18},
	date = {2013-08-17},
	keywords = {{VSA}},
	file = {Snapshot:/home/peer23peer/.zotero/zotero/w3pd0kkm.default/zotero/storage/N2R5VGGE/1633-3d-file-diffs.html:text/html}
}