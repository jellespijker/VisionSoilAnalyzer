function [Y,Xf,Af] = NN5fit(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 27-Oct-2014 20:37:48.
% 
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 12xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [-2.94419709373991;-4.93578418199331;-7.14722479715953;-9.17218483204502;-9.22675680067379;-9.99074323931212;-2.94419709373991;-3.12098866416227;-3.0921128887122;-3.13342526895758;-3.13324332635167;-3.13563842705319];
  x1_step1_gain = [0.328634422652795;0.187719394841059;0.132355358259004;0.105088624960608;0.104987518455396;0.0953759325227081;0.328634422652795;0.320043475892485;0.32260501637595;0.319566156134893;0.323599411788973;0.320434216422146];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [-2.3983250846092952e-05;7.5854682911083229e-05;-4.1315396136366873e-05;0.068425798406206662;5.9538665788668099e-05];
  IW1_1 = [4.801905155767726e-06 9.4737670669832263e-05 -1.0650372358928223e-05 7.8637751303637704e-06 1.7361144720926248e-05 -1.8158915802292854e-05 4.8019051557677251e-06 4.1633652831585034e-05 -2.2998265277085254e-05 -8.7748797424483498e-06 4.5144389675893258e-05 1.0665829456174606e-05;-1.5187542034014446e-05 -0.00029963817570495099 3.3685190373122113e-05 -2.487172137269376e-05 -5.4910178752052989e-05 5.7433369651999803e-05 -1.5187542034014446e-05 -0.00013167973545134994 7.273940208028703e-05 2.7753384986015462e-05 -0.00014278356238851174 -3.3734116962157481e-05;8.2721275155895942e-06 0.0001632024310679425 -1.834714920325344e-05 1.3546751819846618e-05 2.9907651368906156e-05 -3.1281949082175738e-05 8.2721275155895942e-06 7.1721345915797484e-05 -3.9618598582265683e-05 -1.5116292157012828e-05 7.7769212193455969e-05 1.8373787908295149e-05;0.0013977263430233285 -0.2604813137551526 0.0029488784144880409 -0.04529398086872681 -0.060942068273426089 0.034414575012711959 0.0013977263430233285 -0.11590163153404048 0.10343905458935047 0.052681527492168249 -0.12676818684148411 -0.055807872746463968;-1.1920776341640489e-05 -0.00023518724768189342 2.6439656808305513e-05 -1.95219059680462e-05 -4.3099222562241215e-05 4.507969513477779e-05 -1.1920776341640491e-05 -0.00010335597331950942 5.7093436926341696e-05 2.1783733215421593e-05 -0.00011207141372186599 -2.6478035269177498e-05];
  
  % Layer 2
  b2 = 0.18834232348766428;
  LW2_1 = [-5.0553595455470429e-05 0.00031616022903141092 -0.00023255446421854419 0.34439923162170277 0.00014845864550137083];
  
  % Output 1
  y1_step1_ymin = -1;
  y1_step1_gain = 2.36261788857763;
  y1_step1_xoffset = 0.124235429239349;
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
  x = bsxfun(@minus,y,settings_ymin);
  x = bsxfun(@rdivide,x,settings_gain);
  x = bsxfun(@plus,x,settings_xoffset);
end
