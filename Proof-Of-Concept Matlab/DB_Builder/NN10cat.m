function [Y,Xf,Af] = NN10cat(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 27-Oct-2014 20:51:29.
% 
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 12xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 3xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [-2.94419709373991;-4.93578418199331;-7.14722479715953;-9.17218483204502;-9.22675680067379;-9.99074323931212;-2.94419709373991;-3.12098866416227;-3.0921128887122;-3.13342526895758;-3.13324332635167;-3.13563842705319];
  x1_step1_gain = [0.328634422652795;0.187719394841059;0.132355358259004;0.105088624960608;0.104987518455396;0.0953759325227081;0.328634422652795;0.320043475892485;0.32260501637595;0.319566156134893;0.323599411788973;0.320434216422146];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [1.6422601821789242;1.3872297724446281;1.1888773880231651;-0.78196130424568111;-0.045334965448644522;-0.25749391504288244;0.39387939520331272;-0.99111940803490395;1.4985770895421502;-1.6983093449337185];
  IW1_1 = [-0.58808334245574356 -0.87507139007701273 0.20538468353848946 0.69261741522516962 0.12175134620634864 -0.27710337258748491 -0.52426419932022517 -0.3136520045103936 0.75231929725822644 0.30553892045538622 -0.22340102059002392 0.41269697904956248;-0.32310432193695715 -0.21724198761773084 -0.10965662838469034 -0.33792804910686081 -0.53850992214214233 0.0039900797397825778 0.65923332547113578 0.66058527799197198 0.12854280347408736 -0.58686636453035912 0.83295095129369712 0.47581578993158269;-0.24394377682897961 0.6554212373201117 0.21387907194829089 0.63901879286941698 -0.54271130929572808 -0.46358790592366822 0.14986478784184998 0.27798491461602926 -0.55593678972569616 -0.31144034952102151 -0.5420618072263893 0.23258763217356446;0.70751413958687726 0.56053412903118516 -1.1118184820659658 -0.25025851769981772 0.11139700351525358 0.17475874290513177 0.56472266406625049 -0.083567004937694062 -0.37356864831249287 0.084122774880225695 -0.12783496948019973 -0.15881431695807807;-0.75039173944136961 -0.47039038833197588 0.077698897417635748 -0.22616053505826011 0.36273855755312806 0.62331308257818152 -0.45439434256468791 0.48307479007765586 0.33268880996411287 0.056514187122049475 0.78041495625773949 -0.56403766341135042;-0.52062340112361838 0.39726972267583804 0.28467771351968574 0.0082161365113670535 -0.77126878798852083 -0.45016501316083496 -0.14322726264595681 -0.59027450873182585 0.65457679376192923 0.78858873627922199 -0.33375021121458404 -0.018580695630675454;0.19403303406149072 0.3923229105634255 -0.38125467779877897 0.53343126684189501 -0.69777612698625591 -0.73894942109795769 0.13093875149941347 0.83199381193161415 0.52381457471148629 0.2664490994124703 -0.15426612477357174 0.45645866009794128;-0.70634711676747819 0.66258157634950665 -0.27951019560648188 0.075564523237365164 -0.58948671657418206 -0.43759674004895777 -0.68964255138817643 0.26488551927653781 -0.47219204705557749 0.21989719643811392 -0.081000029739955196 0.077756353403479569;0.2143723788291447 0.44231471652097315 0.43340152352108219 0.80340946904142185 0.52257645677958731 0.22979332298847618 0.49965216486102565 0.55889005954079551 0.5203732897943687 -0.41044330314437 -0.089968144815379889 0.2578216738856291;-0.099831591366385211 0.17029158698261482 0.98301385064421787 -0.27321984985197922 -0.27380243574350516 -0.92565254967948385 0.15675323790189893 -0.04937307416648045 0.31977785194637581 0.33518269780789095 -0.6583038237448412 0.43852924693768019];
  
  % Layer 2
  b2 = [0.27260501386398217;0.95238443085379365;0.51405230813625924];
  LW2_1 = [-0.71724645715593172 -0.62817661299762306 -0.20302257000653434 0.46455950160925541 0.27340487345635217 0.11825297320188585 0.51715760626263352 -0.40654825711038078 0.0084613690183498041 0.85831705924151758;-0.80145052411301998 0.39406489337413259 0.61274577914092543 -0.11005164193776019 -0.26048240375112031 0.0081135947031362524 0.18480929160702494 0.44626980003295463 0.60274830514008737 0.42851556573967542;-0.67880495651342965 -0.36888763092548771 -0.36140756168849336 -0.43703714739756044 -0.52788061155501631 0.055553932932948441 0.028548425022797308 0.12720635665650512 1.0158261140004614 0.22794574278929691];
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = softmax_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Competitive Soft Transfer Function
function a = softmax_apply(n)
  nmax = max(n,[],1);
  n = bsxfun(@minus,n,nmax);
  numer = exp(n);
  denom = sum(numer,1); 
  denom(denom == 0) = 1;
  a = bsxfun(@rdivide,numer,denom);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end
